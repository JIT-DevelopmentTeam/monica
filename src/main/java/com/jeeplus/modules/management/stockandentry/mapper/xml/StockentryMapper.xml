<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.management.stockandentry.mapper.StockentryMapper">
    
	<sql id="stockentryColumns">
		a.id AS "id",
		a.f_stockid AS "stockid",
		a.f_batchnumber AS "batchNumber",
		a.f_level AS "level",
		a.f_colornumber AS "colorNumber",
		a.f_number AS "number",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="stockentryJoins">
		
			LEFT JOIN tb_stock b ON b.id = a.f_stockid
	</sql>
	
    
	<select id="get" resultType="Stockentry" >
		SELECT 
			<include refid="stockentryColumns"/>
		FROM tb_stockentry a
		<include refid="stockentryJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="Stockentry" >
		SELECT 
			<include refid="stockentryColumns"/>
		FROM tb_stockentry a
		<include refid="stockentryJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="stockid != null and stockid != ''">
				AND a.f_stockid = #{stockid}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Stockentry" >
		SELECT 
			<include refid="stockentryColumns"/>
		FROM tb_stockentry a
		<include refid="stockentryJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO tb_stockentry(
			id,
			f_stockid,
			f_batchnumber,
			f_level,
			f_colornumber,
			f_number,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{stockid},
			#{batchNumber},
			#{level},
			#{colorNumber},
			#{number},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE tb_stockentry SET 	
			f_stockid = #{stockid},
			f_batchnumber = #{batchNumber},
			f_level = #{level},
			f_colornumber = #{colorNumber},
			f_number = #{number},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM tb_stockentry
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE f_stockid = #{stockid}
			</otherwise>
		</choose>
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE tb_stockentry SET 
			del_flag = #{DEL_FLAG_DELETE}
		<choose>
			<when test="id !=null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE f_stockid = #{stockid}
			</otherwise>
		</choose>
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Stockentry" statementType="STATEMENT">
		select * FROM tb_stockentry  where ${propertyName} = '${value}'
	</select>
	
</mapper>